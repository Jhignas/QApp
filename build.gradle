buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.aconex'
version = '1.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task createImage(dependsOn: 'bootJar'){
	group 'Docker'
	description 'Creates application\'s Docker Image using JAR file'

	doLast{
		exec {
            commandLine('docker','build','-t','jhignas/qapp_spring:toDocker','-f','Docker/Dockerfile_SpringApplication','.')
        }
	}	
}

task startQApp(dependsOn: 'bootJar'){
	group 'QApp'
	description 'starts the QApp spring application along with database as docker containers'

	doLast{
		exec {
            commandLine('docker-compose','up')
        }
	}	
}

task stopQApp(dependsOn: 'startQApp'){
	group 'QApp'
	description 'stops the previously spawned docker container of the QApp spring application and database'

	doLast{
		exec {
            commandLine('docker-compose' , 'down')
        }
	}
}